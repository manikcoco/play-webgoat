# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# This workflow file requires a free account on Semgrep.dev to
# manage rules, file ignores, notifications, and more.
#
# See https://semgrep.dev/docs

# Name of this GitHub Actions workflow.
name: Semgrep

on:
  workflow_dispatch:
  schedule:
    - cron: '20 17 * * *' # Sets Semgrep to scan every day at 17:20 UTC.
    # It is recommended to change the schedule to a random time.

permissions:
  contents: read

# jobs:
#   semgrep-full:
#       runs-on: ubuntu-latest
#       container:
#         image: returntocorp/semgrep

#       steps:

#         # step 1
#         - name: clone application source code
#           uses: actions/checkout@v3

#         # step 2
#         - name: full scan
#           run: |
#             semgrep \
#               --sarif --output report.sarif \
#               --metrics=off \
#               --config="p/default"

#         # step 3
        
#         - name: save report as pipeline artifact
#           uses: actions/upload-artifact@v3
#           with:
#             name: report.sarif
#             path: report.sarif
            
#         # step 4
#         - name: Download report
#           uses: actions/download-artifact@v2
#           with: 
#             name: report.sarif

jobs:
  semgrep:
    # User definable name of this GitHub Actions job.
    name: semgrep/ci 
    # If you are self-hosting, change the following `runs-on` value: 
    runs-on: ubuntu-latest

    container:
      # A Docker image with Semgrep installed. Do not change this.
      image: returntocorp/semgrep

    # Skip any PR created by dependabot to avoid permission issues:
    if: (github.actor != 'dependabot[bot]')

    steps:
      # Fetch project source with GitHub Actions Checkout.
      - uses: actions/checkout@v3
      # Run the "semgrep ci" command on the command line of the docker image.
      - run: semgrep \
                    --sarif --output semgrep.sarif \
                    --metrics=off \
                    --config auto
        env:
          # Connect to Semgrep Cloud Platform through your SEMGREP_APP_TOKEN.
          # Generate a token from Semgrep Cloud Platform > Settings
          # and add it to your GitHub secrets.
          SEMGREP_APP_TOKEN: ${{ secrets.SEMGREP_APP_TOKEN }}
      # Upload SARIF file generated in previous step
      - name: save report as pipeline artifact
        uses: actions/upload-artifact@v3
        with:
          name: report.sarif
          path: report.sarif
